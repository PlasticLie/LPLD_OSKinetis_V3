###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.1.53790/W32 for ARM     16/Feb/2014  16:24:53 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\embed\LPLD\LPLD_OSKinetis_V3\project\04-(UART)LPLD_Se #
#                    rialComm\app\LPLD_SerialComm.c                           #
#    Command line =  "C:\embed\LPLD\LPLD_OSKinetis_V3\project\04-(UART)LPLD_S #
#                    erialComm\app\LPLD_SerialComm.c" -D LPLD_K60 -lCN        #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\04-(UART)LPLD_S #
#                    erialComm\iar\RAM\List\" -lB                             #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\04-(UART)LPLD_S #
#                    erialComm\iar\RAM\List\" -o                              #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\04-(UART)LPLD_S #
#                    erialComm\iar\RAM\Obj\" --no_cse --no_unroll             #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.4\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -I "C:\embed\LPLD\LPLD_OSKinetis_V3\project\04-(U #
#                    ART)LPLD_SerialComm\iar\..\app\" -I                      #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\04-(UART)LPLD_S #
#                    erialComm\iar\..\..\..\lib\CPU\" -I                      #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\04-(UART)LPLD_S #
#                    erialComm\iar\..\..\..\lib\common\" -I                   #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\04-(UART)LPLD_S #
#                    erialComm\iar\..\..\..\lib\LPLD\" -I                     #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\04-(UART)LPLD_S #
#                    erialComm\iar\..\..\..\lib\LPLD\HW\" -I                  #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\04-(UART)LPLD_S #
#                    erialComm\iar\..\..\..\lib\LPLD\DEV\" -I                 #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\04-(UART)LPLD_S #
#                    erialComm\iar\..\..\..\lib\uCOS-II\Ports\" -I            #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\04-(UART)LPLD_S #
#                    erialComm\iar\..\..\..\lib\uCOS-II\Source\" -I           #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\04-(UART)LPLD_S #
#                    erialComm\iar\..\..\..\lib\FatFs\" -I                    #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\04-(UART)LPLD_S #
#                    erialComm\iar\..\..\..\lib\FatFs\option\" -I             #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\04-(UART)LPLD_S #
#                    erialComm\iar\..\..\..\lib\USB\common\" -I               #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\04-(UART)LPLD_S #
#                    erialComm\iar\..\..\..\lib\USB\driver\" -I               #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\04-(UART)LPLD_S #
#                    erialComm\iar\..\..\..\lib\USB\descriptor\" -I           #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\04-(UART)LPLD_S #
#                    erialComm\iar\..\..\..\lib\USB\class\" -Ol -I            #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.4\arm\CMSIS\Include\" -D ARM_MATH_CM4                  #
#    List file    =  C:\embed\LPLD\LPLD_OSKinetis_V3\project\04-(UART)LPLD_Se #
#                    rialComm\iar\RAM\List\LPLD_SerialComm.lst                #
#    Object file  =  C:\embed\LPLD\LPLD_OSKinetis_V3\project\04-(UART)LPLD_Se #
#                    rialComm\iar\RAM\Obj\LPLD_SerialComm.o                   #
#                                                                             #
#                                                                             #
###############################################################################

C:\embed\LPLD\LPLD_OSKinetis_V3\project\04-(UART)LPLD_SerialComm\app\LPLD_SerialComm.c
      1          /**
      2           * --------------基于"拉普兰德K60底层库V3"的工程（LPLD_SerialComm）-----------------
      3           * @file LPLD_SerialComm.c
      4           * @version 0.1
      5           * @date 2013-9-29
      6           * @brief 利用UART模块，实现串口的数据收发。
      7           *
      8           * 版权所有:北京拉普兰德电子技术有限公司
      9           * http://www.lpld.cn
     10           * mail:support@lpld.cn
     11           * 硬件平台:  LPLD K60 Card / LPLD K60 Nano
     12           *
     13           * 本工程基于"拉普兰德K60底层库V3"开发，
     14           * 所有开源代码均在"lib"文件夹下，用户不必更改该目录下代码，
     15           * 所有用户工程需保存在"project"文件夹下，以工程名定义文件夹名，
     16           * 底层库使用方法见相关文档。 
     17           *
     18           */
     19          #include "common.h"
     20          
     21          /****************************************
     22           说明：
     23             *将MiniUSB线插入RUSH Kinetis开发板的USB
     24              插座，并连接至电脑USB接口。
     25             *使用串口调试助手波特率设置为9600
     26             *使用串口调试助手查看运行结果
     27           ****************************************/
     28          
     29          //函数声明  
     30          void uart_init(void);
     31          //变量声明

   \                                 In section .bss, align 4
     32          UART_InitTypeDef uart0_init_struct;
   \                     uart0_init_struct:
   \   00000000                      DS8 20
     33          

   \                                 In section .text, align 2, keep-with-next
     34          void main (void)
     35          {
     36            int8 recv;
     37            
     38            uart_init();
   \                     main:
   \   00000000   0x.... 0x....      BL       uart_init
     39            LPLD_UART_PutCharArr(UART0, "Input something:\r\n", 18);
   \   00000004   0x2212             MOVS     R2,#+18
   \   00000006   0x....             LDR.N    R1,??DataTable1
   \   00000008   0x....             LDR.N    R0,??DataTable1_1  ;; 0x4006a000
   \   0000000A   0x.... 0x....      BL       LPLD_UART_PutCharArr
     40            printf ("hello world !\n");
   \   0000000E   0x....             LDR.N    R0,??DataTable1_2
   \   00000010   0x.... 0x....      BL       printf
     41            while(1)
     42            {
     43              recv = LPLD_UART_GetChar(UART0);
   \                     ??main_0:
   \   00000014   0x....             LDR.N    R0,??DataTable1_1  ;; 0x4006a000
   \   00000016   0x.... 0x....      BL       LPLD_UART_GetChar
     44              LPLD_UART_PutChar(UART0, recv);
   \   0000001A   0x0001             MOVS     R1,R0
   \   0000001C   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000001E   0x....             LDR.N    R0,??DataTable1_1  ;; 0x4006a000
   \   00000020   0x.... 0x....      BL       LPLD_UART_PutChar
   \   00000024   0xE7F6             B.N      ??main_0
     45            } 
     46            
     47          }
     48          
     49          /*
     50           * 初始化UART5模块
     51           *
     52           */

   \                                 In section .text, align 2, keep-with-next
     53          void uart_init(void)
     54          {
   \                     uart_init:
   \   00000000   0xB580             PUSH     {R7,LR}
     55            uart0_init_struct.UART_Uartx = UART0; //使用UART5
   \   00000002   0x....             LDR.N    R0,??DataTable1_3
   \   00000004   0x....             LDR.N    R1,??DataTable1_1  ;; 0x4006a000
   \   00000006   0x6001             STR      R1,[R0, #+0]
     56            uart0_init_struct.UART_BaudRate = 9600; //设置波特率9600
   \   00000008   0x....             LDR.N    R0,??DataTable1_3
   \   0000000A   0xF44F 0x5116      MOV      R1,#+9600
   \   0000000E   0x6041             STR      R1,[R0, #+4]
     57            uart0_init_struct.UART_RxPin = PTB16;  //接收引脚为PTE9
   \   00000010   0x....             LDR.N    R0,??DataTable1_3
   \   00000012   0x2130             MOVS     R1,#+48
   \   00000014   0x7241             STRB     R1,[R0, #+9]
     58            uart0_init_struct.UART_TxPin = PTB17;  //发送引脚为PTE8
   \   00000016   0x....             LDR.N    R0,??DataTable1_3
   \   00000018   0x2131             MOVS     R1,#+49
   \   0000001A   0x7201             STRB     R1,[R0, #+8]
     59            //初始化UART
     60            LPLD_UART_Init(uart0_init_struct);
   \   0000001C   0x....             LDR.N    R1,??DataTable1_3
   \   0000001E   0xB084             SUB      SP,SP,#+16
   \   00000020   0x4668             MOV      R0,SP
   \   00000022   0x2214             MOVS     R2,#+20
   \   00000024   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000028   0xBC0F             POP      {R0-R3}
   \   0000002A   0x.... 0x....      BL       LPLD_UART_Init
     61          }
   \   0000002E   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     `?<Constant "Input something:\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x4006A000         DC32     0x4006a000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     `?<Constant "hello world !\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     uart0_init_struct

   \                                 In section .rodata, align 4
   \                     `?<Constant "Input something:\\r\\n">`:
   \   00000000   0x49 0x6E          DC8 "Input something:\015\012"
   \              0x70 0x75    
   \              0x74 0x20    
   \              0x73 0x6F    
   \              0x6D 0x65    
   \              0x74 0x68    
   \              0x69 0x6E    
   \              0x67 0x3A    
   \              0x0D 0x0A    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "hello world !\\n">`:
   \   00000000   0x68 0x65          DC8 "hello world !\012"
   \              0x6C 0x6C    
   \              0x6F 0x20    
   \              0x77 0x6F    
   \              0x72 0x6C    
   \              0x64 0x20    
   \              0x21 0x0A    
   \              0x00         
   \   0000000F   0x00               DC8 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        0  main
              0 -> LPLD_UART_GetChar
              0 -> LPLD_UART_PutChar
              0 -> LPLD_UART_PutCharArr
              0 -> printf
              0 -> uart_init
       24  uart_init
              8 -> LPLD_UART_Init
             24 -> __aeabi_memcpy4


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      20  ?<Constant "Input something:\r\n">
      16  ?<Constant "hello world !\n">
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
      38  main
      20  uart0_init_struct
      48  uart_init

 
  20 bytes in section .bss
  36 bytes in section .rodata
 102 bytes in section .text
 
 102 bytes of CODE  memory
  36 bytes of CONST memory
  20 bytes of DATA  memory

Errors: none
Warnings: none
