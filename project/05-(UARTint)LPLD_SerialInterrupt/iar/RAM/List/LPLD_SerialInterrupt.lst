###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.1.53790/W32 for ARM     16/Feb/2014  17:41:02 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPLD #
#                    _SerialInterrupt\app\LPLD_SerialInterrupt.c              #
#    Command line =  "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPL #
#                    D_SerialInterrupt\app\LPLD_SerialInterrupt.c" -D         #
#                    LPLD_K60 -lCN "C:\embed\LPLD\LPLD_OSKinetis_V3\project\0 #
#                    5-(UARTint)LPLD_SerialInterrupt\iar\RAM\List\" -lB       #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPL #
#                    D_SerialInterrupt\iar\RAM\List\" -o                      #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPL #
#                    D_SerialInterrupt\iar\RAM\Obj\" --no_cse --no_unroll     #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.4\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -I "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(U #
#                    ARTint)LPLD_SerialInterrupt\iar\..\app\" -I              #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPL #
#                    D_SerialInterrupt\iar\..\..\..\lib\CPU\" -I              #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPL #
#                    D_SerialInterrupt\iar\..\..\..\lib\common\" -I           #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPL #
#                    D_SerialInterrupt\iar\..\..\..\lib\LPLD\" -I             #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPL #
#                    D_SerialInterrupt\iar\..\..\..\lib\LPLD\HW\" -I          #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPL #
#                    D_SerialInterrupt\iar\..\..\..\lib\LPLD\DEV\" -I         #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPL #
#                    D_SerialInterrupt\iar\..\..\..\lib\uCOS-II\Ports\" -I    #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPL #
#                    D_SerialInterrupt\iar\..\..\..\lib\uCOS-II\Source\" -I   #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPL #
#                    D_SerialInterrupt\iar\..\..\..\lib\FatFs\" -I            #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPL #
#                    D_SerialInterrupt\iar\..\..\..\lib\FatFs\option\" -I     #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPL #
#                    D_SerialInterrupt\iar\..\..\..\lib\USB\common\" -I       #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPL #
#                    D_SerialInterrupt\iar\..\..\..\lib\USB\driver\" -I       #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPL #
#                    D_SerialInterrupt\iar\..\..\..\lib\USB\descriptor\" -I   #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPL #
#                    D_SerialInterrupt\iar\..\..\..\lib\USB\class\" -Ol -I    #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.4\arm\CMSIS\Include\" -D ARM_MATH_CM4                  #
#    List file    =  C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPLD #
#                    _SerialInterrupt\iar\RAM\List\LPLD_SerialInterrupt.lst   #
#    Object file  =  C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPLD #
#                    _SerialInterrupt\iar\RAM\Obj\LPLD_SerialInterrupt.o      #
#                                                                             #
#                                                                             #
###############################################################################

C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPLD_SerialInterrupt\app\LPLD_SerialInterrupt.c
      1          /**
      2           * --------------基于"拉普兰德K60底层库V3"的工程（LPLD_SerialInterrupt）-----------------
      3           * @file LPLD_SerialInterrupt.c
      4           * @version 0.1
      5           * @date 2013-9-29
      6           * @brief 利用UART模块及其中断功能，实现串口的数据收发。
      7           *
      8           * 版权所有:北京拉普兰德电子技术有限公司
      9           * http://www.lpld.cn
     10           * mail:support@lpld.cn
     11           * 硬件平台:  LPLD K60 Card / LPLD K60 Nano
     12           *
     13           * 本工程基于"拉普兰德K60底层库V3"开发，
     14           * 所有开源代码均在"lib"文件夹下，用户不必更改该目录下代码，
     15           * 所有用户工程需保存在"project"文件夹下，以工程名定义文件夹名，
     16           * 底层库使用方法见相关文档。 
     17           *
     18           */
     19          #include "common.h"
     20          
     21          /****************************************
     22           说明：
     23             *将MiniUSB线插入RUSH Kinetis开发板的USB
     24              插座，并连接至电脑USB接口。
     25             *使用串口调试助手波特率设置为9600
     26             *使用串口调试助手查看运行结果
     27           ****************************************/
     28          
     29          //函数声明  
     30          void uart_init(void);
     31          void uart_isr(void);
     32          
     33          void gpio_init (void);
     34          
     35          //变量声明

   \                                 In section .bss, align 4
     36          UART_InitTypeDef uart0_init_struct;
   \                     uart0_init_struct:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
     37          GPIO_InitTypeDef gpio_init_struct;
   \                     gpio_init_struct:
   \   00000000                      DS8 20
     38          

   \                                 In section .bss, align 1
     39            char flag;
   \                     flag:
   \   00000000                      DS8 1

   \                                 In section .text, align 2, keep-with-next
     40          void main (void)
     41          {
     42            char i;
     43            
     44            gpio_init ();
   \                     main:
   \   00000000   0x.... 0x....      BL       gpio_init
     45            
     46            uart_init();
   \   00000004   0x.... 0x....      BL       uart_init
     47            LPLD_UART_PutCharArr(UART0, "Input something:\r\n", 20);
   \   00000008   0x2214             MOVS     R2,#+20
   \   0000000A   0x....             LDR.N    R1,??DataTable3
   \   0000000C   0x....             LDR.N    R0,??DataTable3_1  ;; 0x4006a000
   \   0000000E   0x.... 0x....      BL       LPLD_UART_PutCharArr
   \   00000012   0xE00B             B.N      ??main_0
     48            
     49            while(1)
     50            {
     51                if (flag)
     52                {
     53                  for (i = 20; i < 25; i ++)
     54                   LPLD_GPIO_Toggle_b(PTB, i);
   \                     ??main_1:
   \   00000014   0x0021             MOVS     R1,R4
   \   00000016   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000018   0x....             LDR.N    R0,??DataTable3_2  ;; 0x400ff040
   \   0000001A   0x.... 0x....      BL       LPLD_GPIO_Toggle_b
   \   0000001E   0x1C64             ADDS     R4,R4,#+1
   \                     ??main_2:
   \   00000020   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000022   0x2C19             CMP      R4,#+25
   \   00000024   0xD3F6             BCC.N    ??main_1
     55                  flag = 0;
   \   00000026   0x....             LDR.N    R0,??DataTable3_3
   \   00000028   0x2100             MOVS     R1,#+0
   \   0000002A   0x7001             STRB     R1,[R0, #+0]
   \                     ??main_0:
   \   0000002C   0x....             LDR.N    R0,??DataTable3_3
   \   0000002E   0x7800             LDRB     R0,[R0, #+0]
   \   00000030   0x2800             CMP      R0,#+0
   \   00000032   0xD0FB             BEQ.N    ??main_0
   \   00000034   0x2414             MOVS     R4,#+20
   \   00000036   0xE7F3             B.N      ??main_2
     56                }
     57            } 
     58            
     59          }
     60          
     61          /*
     62           * 初始化UART5模块
     63           *
     64           */

   \                                 In section .text, align 2, keep-with-next
     65          void uart_init(void)
     66          {
   \                     uart_init:
   \   00000000   0xB580             PUSH     {R7,LR}
     67            uart0_init_struct.UART_Uartx = UART0; //使用UART5
   \   00000002   0x....             LDR.N    R0,??DataTable3_4
   \   00000004   0x....             LDR.N    R1,??DataTable3_1  ;; 0x4006a000
   \   00000006   0x6001             STR      R1,[R0, #+0]
     68            uart0_init_struct.UART_BaudRate = 9600; //设置波特率9600
   \   00000008   0x....             LDR.N    R0,??DataTable3_4
   \   0000000A   0xF44F 0x5116      MOV      R1,#+9600
   \   0000000E   0x6041             STR      R1,[R0, #+4]
     69            uart0_init_struct.UART_RxPin = PTB16;  //接收引脚为PTE9
   \   00000010   0x....             LDR.N    R0,??DataTable3_4
   \   00000012   0x2130             MOVS     R1,#+48
   \   00000014   0x7241             STRB     R1,[R0, #+9]
     70            uart0_init_struct.UART_TxPin = PTB17;  //发送引脚为PTE8
   \   00000016   0x....             LDR.N    R0,??DataTable3_4
   \   00000018   0x2131             MOVS     R1,#+49
   \   0000001A   0x7201             STRB     R1,[R0, #+8]
     71            uart0_init_struct.UART_RxIntEnable = TRUE;    //使能接收中断
   \   0000001C   0x....             LDR.N    R0,??DataTable3_4
   \   0000001E   0x2101             MOVS     R1,#+1
   \   00000020   0x7281             STRB     R1,[R0, #+10]
     72            uart0_init_struct.UART_RxIsr = uart_isr;      //设置接收中断函数
   \   00000022   0x....             LDR.N    R0,??DataTable3_4
   \   00000024   0x.... 0x....      ADR.W    R1,uart_isr
   \   00000028   0x60C1             STR      R1,[R0, #+12]
     73            //初始化UART
     74            LPLD_UART_Init(uart0_init_struct);
   \   0000002A   0x....             LDR.N    R1,??DataTable3_4
   \   0000002C   0xB084             SUB      SP,SP,#+16
   \   0000002E   0x4668             MOV      R0,SP
   \   00000030   0x2214             MOVS     R2,#+20
   \   00000032   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000036   0xBC0F             POP      {R0-R3}
   \   00000038   0x.... 0x....      BL       LPLD_UART_Init
     75            //使能UART中断
     76            LPLD_UART_EnableIrq(uart0_init_struct);
   \   0000003C   0x....             LDR.N    R1,??DataTable3_4
   \   0000003E   0xB084             SUB      SP,SP,#+16
   \   00000040   0x4668             MOV      R0,SP
   \   00000042   0x2214             MOVS     R2,#+20
   \   00000044   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000048   0xBC0F             POP      {R0-R3}
   \   0000004A   0x.... 0x....      BL       LPLD_UART_EnableIrq
     77          }
   \   0000004E   0xBD01             POP      {R0,PC}          ;; return
     78          
     79          /*
     80           * UART5接收中断函数
     81           *
     82           */

   \                                 In section .text, align 4, keep-with-next
     83          void uart_isr(void)
     84          {
   \                     uart_isr:
   \   00000000   0xB580             PUSH     {R7,LR}
     85            int8 recv;
     86            
     87            recv = LPLD_UART_GetChar(UART0);
   \   00000002   0x....             LDR.N    R0,??DataTable3_1  ;; 0x4006a000
   \   00000004   0x.... 0x....      BL       LPLD_UART_GetChar
     88            LPLD_UART_PutChar(UART0, recv);
   \   00000008   0x0001             MOVS     R1,R0
   \   0000000A   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000000C   0x....             LDR.N    R0,??DataTable3_1  ;; 0x4006a000
   \   0000000E   0x.... 0x....      BL       LPLD_UART_PutChar
     89            
     90            flag = 1;
   \   00000012   0x....             LDR.N    R0,??DataTable3_3
   \   00000014   0x2101             MOVS     R1,#+1
   \   00000016   0x7001             STRB     R1,[R0, #+0]
     91          }
   \   00000018   0xBD01             POP      {R0,PC}          ;; return
     92          

   \                                 In section .text, align 2, keep-with-next
     93          void gpio_init (void)
     94          {
   \                     gpio_init:
   \   00000000   0xB580             PUSH     {R7,LR}
     95            gpio_init_struct.GPIO_PTx = PTB;
   \   00000002   0x....             LDR.N    R0,??DataTable3_5
   \   00000004   0x....             LDR.N    R1,??DataTable3_2  ;; 0x400ff040
   \   00000006   0x6001             STR      R1,[R0, #+0]
     96            gpio_init_struct.GPIO_Pins = GPIO_Pin20|GPIO_Pin21|GPIO_Pin22|GPIO_Pin23;
   \   00000008   0x....             LDR.N    R0,??DataTable3_5
   \   0000000A   0xF45F 0x0170      MOVS     R1,#+15728640
   \   0000000E   0x6041             STR      R1,[R0, #+4]
     97            gpio_init_struct.GPIO_Dir = DIR_OUTPUT;
   \   00000010   0x....             LDR.N    R0,??DataTable3_5
   \   00000012   0x2101             MOVS     R1,#+1
   \   00000014   0x7301             STRB     R1,[R0, #+12]
     98            gpio_init_struct.GPIO_Output = OUTPUT_H;
   \   00000016   0x....             LDR.N    R0,??DataTable3_5
   \   00000018   0x2101             MOVS     R1,#+1
   \   0000001A   0x7341             STRB     R1,[R0, #+13]
     99            gpio_init_struct.GPIO_PinControl = IRQC_DIS;
   \   0000001C   0x....             LDR.N    R0,??DataTable3_5
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x6081             STR      R1,[R0, #+8]
    100            LPLD_GPIO_Init(gpio_init_struct);
   \   00000022   0x....             LDR.N    R1,??DataTable3_5
   \   00000024   0xB084             SUB      SP,SP,#+16
   \   00000026   0x4668             MOV      R0,SP
   \   00000028   0x2214             MOVS     R2,#+20
   \   0000002A   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000002E   0xBC0F             POP      {R0-R3}
   \   00000030   0x.... 0x....      BL       LPLD_GPIO_Init
    101          }
   \   00000034   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     `?<Constant "Input something:\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x4006A000         DC32     0x4006a000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x400FF040         DC32     0x400ff040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x........         DC32     flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     uart0_init_struct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     gpio_init_struct

   \                                 In section .rodata, align 4
   \                     `?<Constant "Input something:\\r\\n">`:
   \   00000000   0x49 0x6E          DC8 "Input something:\015\012"
   \              0x70 0x75    
   \              0x74 0x20    
   \              0x73 0x6F    
   \              0x6D 0x65    
   \              0x74 0x68    
   \              0x69 0x6E    
   \              0x67 0x3A    
   \              0x0D 0x0A    
   \              0x00         
   \   00000013   0x00               DC8 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       24  gpio_init
              8 -> LPLD_GPIO_Init
             24 -> __aeabi_memcpy4
        0  main
              0 -> LPLD_GPIO_Toggle_b
              0 -> LPLD_UART_PutCharArr
              0 -> gpio_init
              0 -> uart_init
       24  uart_init
              8 -> LPLD_UART_EnableIrq
              8 -> LPLD_UART_Init
             24 -> __aeabi_memcpy4
        8  uart_isr
              8 -> LPLD_UART_GetChar
              8 -> LPLD_UART_PutChar


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      20  ?<Constant "Input something:\r\n">
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       1  flag
      54  gpio_init
      20  gpio_init_struct
      56  main
      20  uart0_init_struct
      80  uart_init
      26  uart_isr

 
  41 bytes in section .bss
  20 bytes in section .rodata
 240 bytes in section .text
 
 240 bytes of CODE  memory
  20 bytes of CONST memory
  41 bytes of DATA  memory

Errors: none
Warnings: none
