###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.1.53790/W32 for ARM     16/Feb/2014  17:30:20 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\embed\LPLD\LPLD_OSKinetis_V3\lib\CPU\system_MK60DZ10. #
#                    c                                                        #
#    Command line =  C:\embed\LPLD\LPLD_OSKinetis_V3\lib\CPU\system_MK60DZ10. #
#                    c -D LPLD_K60 -lCN "C:\embed\LPLD\LPLD_OSKinetis_V3\proj #
#                    ect\05-(UARTint)LPLD_SerialInterrupt\iar\RAM\List\" -lB  #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPL #
#                    D_SerialInterrupt\iar\RAM\List\" -o                      #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPL #
#                    D_SerialInterrupt\iar\RAM\Obj\" --no_cse --no_unroll     #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.4\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -I "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(U #
#                    ARTint)LPLD_SerialInterrupt\iar\..\app\" -I              #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPL #
#                    D_SerialInterrupt\iar\..\..\..\lib\CPU\" -I              #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPL #
#                    D_SerialInterrupt\iar\..\..\..\lib\common\" -I           #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPL #
#                    D_SerialInterrupt\iar\..\..\..\lib\LPLD\" -I             #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPL #
#                    D_SerialInterrupt\iar\..\..\..\lib\LPLD\HW\" -I          #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPL #
#                    D_SerialInterrupt\iar\..\..\..\lib\LPLD\DEV\" -I         #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPL #
#                    D_SerialInterrupt\iar\..\..\..\lib\uCOS-II\Ports\" -I    #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPL #
#                    D_SerialInterrupt\iar\..\..\..\lib\uCOS-II\Source\" -I   #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPL #
#                    D_SerialInterrupt\iar\..\..\..\lib\FatFs\" -I            #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPL #
#                    D_SerialInterrupt\iar\..\..\..\lib\FatFs\option\" -I     #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPL #
#                    D_SerialInterrupt\iar\..\..\..\lib\USB\common\" -I       #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPL #
#                    D_SerialInterrupt\iar\..\..\..\lib\USB\driver\" -I       #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPL #
#                    D_SerialInterrupt\iar\..\..\..\lib\USB\descriptor\" -I   #
#                    "C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPL #
#                    D_SerialInterrupt\iar\..\..\..\lib\USB\class\" -Ol -I    #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.4\arm\CMSIS\Include\" -D ARM_MATH_CM4                  #
#    List file    =  C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPLD #
#                    _SerialInterrupt\iar\RAM\List\system_MK60DZ10.lst        #
#    Object file  =  C:\embed\LPLD\LPLD_OSKinetis_V3\project\05-(UARTint)LPLD #
#                    _SerialInterrupt\iar\RAM\Obj\system_MK60DZ10.o           #
#                                                                             #
#                                                                             #
###############################################################################

C:\embed\LPLD\LPLD_OSKinetis_V3\lib\CPU\system_MK60DZ10.c
      1          /**
      2           * @file system_MK60DZ10.c
      3           * @version 1.2.1[By LPLD]
      4           * @date 2013-06-18
      5           * @brief MK60DZ10系列单片机系统配置文件
      6           *
      7           * 更改建议:禁止修改
      8           *
      9           * 该代码提供系统配置函数以及一个储存系统主频的全局变量。
     10           * 配置函数主要负责建立系统各模块的时钟。
     11           * 代码还实现常见的系统中断函数。
     12           *
     13           * 版权所有:北京拉普兰德电子技术有限公司
     14           * http://www.lpld.cn
     15           * mail:support@lpld.cn
     16           *
     17           * @par
     18           * 本代码由拉普兰德[LPLD]开发并维护，并向所有使用者开放源代码。
     19           * 开发者可以随意修使用或改源代码。但本段及以上注释应予以保留。
     20           * 不得更改或删除原版权所有者姓名，二次开发者可以加注二次版权所有者。
     21           * 但应在遵守此协议的基础上，开放源代码、不得出售代码本身。
     22           * 拉普兰德不负责由于使用本代码所带来的任何事故、法律责任或相关不良影响。
     23           * 拉普兰德无义务解释、说明本代码的具体原理、功能、实现方法。
     24           * 除非拉普兰德[LPLD]授权，开发者不得将本代码用于商业产品。
     25           */
     26          
     27          #include <stdint.h>
     28          #include "common.h"
     29          
     30          #define DISABLE_WDOG    1
     31          
     32          /*----------------------------------------------------------------------------
     33            定义时钟相关值
     34           *----------------------------------------------------------------------------*/
     35          #define CPU_XTAL_CLK_HZ                 50000000u       //外部有源晶振频率，单位Hz
     36          #define CPU_XTAL32k_CLK_HZ              32768u          //外部32k时钟晶振频率，单位Hz    
     37          #define CPU_INT_SLOW_CLK_HZ             32768u          //慢速内部振荡器的值，单位Hz
     38          #define CPU_INT_FAST_CLK_HZ             4000000u        //快速内部振荡器的值，单位Hz
     39          #define DEFAULT_SYSTEM_CLOCK            100000000u      //默认系统主频，单位Hz
     40          
     41          /**
     42           * @brief 系统主频（单位Hz）
     43           */

   \                                 In section .data, align 4
     44          uint32_t SystemCoreClock = DEFAULT_SYSTEM_CLOCK;
   \                     SystemCoreClock:
   \   00000000   0x05F5E100         DC32 100000000
     45          
     46          /**
     47           * 初始化系统
     48           *
     49           * @param  none
     50           * @return none
     51           *
     52           * @brief  初始化MCU硬件系统，包括开放IO时钟、初始化主频、初始化调试串口，
     53           *         打印调试信息。SystemInit由MCU启动文件调用。
     54           *         
     55           */

   \                                 In section .text, align 2, keep-with-next
     56          void SystemInit (void) {
   \                     SystemInit:
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
     57            //定义UART结构体
     58            UART_InitTypeDef term_port_structure;
     59            //使能全部IO时钟
     60            SIM->SCGC5 |= (SIM_SCGC5_PORTA_MASK
     61                        | SIM_SCGC5_PORTB_MASK
     62                        | SIM_SCGC5_PORTC_MASK
     63                        | SIM_SCGC5_PORTD_MASK
     64                        | SIM_SCGC5_PORTE_MASK );
   \   00000004   0x....             LDR.N    R0,??DataTable3_1  ;; 0x40048038
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF450 0x5078      ORRS     R0,R0,#0x3E00
   \   0000000C   0x....             LDR.N    R1,??DataTable3_1  ;; 0x40048038
   \   0000000E   0x6008             STR      R0,[R1, #+0]
     65          #if (DISABLE_WDOG)
     66            //禁用看门狗模块
     67            /* WDOG_UNLOCK: WDOGUNLOCK=0xC520 */
     68            WDOG->UNLOCK = (uint16_t)0xC520u;     /* Key 1 */
   \   00000010   0x....             LDR.N    R0,??DataTable3_2  ;; 0x4005200e
   \   00000012   0xF24C 0x5120      MOVW     R1,#+50464
   \   00000016   0x8001             STRH     R1,[R0, #+0]
     69            /* WDOG_UNLOCK : WDOGUNLOCK=0xD928 */
     70            WDOG->UNLOCK  = (uint16_t)0xD928u;    /* Key 2 */
   \   00000018   0x....             LDR.N    R0,??DataTable3_2  ;; 0x4005200e
   \   0000001A   0xF64D 0x1128      MOVW     R1,#+55592
   \   0000001E   0x8001             STRH     R1,[R0, #+0]
     71            /* WDOG_STCTRLH: ??=0,DISTESTWDOG=0,BYTESEL=0,TESTSEL=0,TESTWDOG=0,??=0,STNDBYEN=1,WAITEN=1,STOPEN=1,DBGEN=0,ALLOWUPDATE=1,WINEN=0,IRQRSTEN=0,CLKSRC=1,WDOGEN=0 */
     72            WDOG->STCTRLH = (uint16_t)0x01D2u;
   \   00000020   0x....             LDR.N    R0,??DataTable3_3  ;; 0x40052000
   \   00000022   0xF44F 0x71E9      MOV      R1,#+466
   \   00000026   0x8001             STRH     R1,[R0, #+0]
     73          #endif /* (DISABLE_WDOG) */
     74            
     75            //将中断向量表、需在RAM中运行的函数等数据拷贝到RAM中
     76            common_relocate();
   \   00000028   0x.... 0x....      BL       common_relocate
     77            
     78            //初始化各部分时钟：系统内核主频、总线时钟、FlexBus时钟、Flash时钟
     79            LPLD_PLL_Setup(CORE_CLK_MHZ);
   \   0000002C   0x2064             MOVS     R0,#+100
   \   0000002E   0x.... 0x....      BL       LPLD_PLL_Setup
     80            
     81            //更新内核主频
     82            SystemCoreClockUpdate();
   \   00000032   0x.... 0x....      BL       SystemCoreClockUpdate
     83            
     84            //获取各部分时钟
     85            g_core_clock = SystemCoreClock;
   \   00000036   0x....             LDR.N    R0,??DataTable3_4
   \   00000038   0x....             LDR.N    R1,??DataTable3_5
   \   0000003A   0x6809             LDR      R1,[R1, #+0]
   \   0000003C   0x6001             STR      R1,[R0, #+0]
     86            g_bus_clock = g_core_clock / ((uint32_t)((SIM->CLKDIV1 & SIM_CLKDIV1_OUTDIV2_MASK) >> SIM_CLKDIV1_OUTDIV2_SHIFT)+ 1u);
   \   0000003E   0x....             LDR.N    R0,??DataTable3_4
   \   00000040   0x6800             LDR      R0,[R0, #+0]
   \   00000042   0x....             LDR.N    R1,??DataTable3_6  ;; 0x40048044
   \   00000044   0x6809             LDR      R1,[R1, #+0]
   \   00000046   0xF3C1 0x6103      UBFX     R1,R1,#+24,#+4
   \   0000004A   0x1C49             ADDS     R1,R1,#+1
   \   0000004C   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000050   0x....             LDR.N    R1,??DataTable3_7
   \   00000052   0x6008             STR      R0,[R1, #+0]
     87            g_flexbus_clock =  g_core_clock / ((uint32_t)((SIM->CLKDIV1 & SIM_CLKDIV1_OUTDIV3_MASK) >> SIM_CLKDIV1_OUTDIV3_SHIFT)+ 1u);
   \   00000054   0x....             LDR.N    R0,??DataTable3_4
   \   00000056   0x6800             LDR      R0,[R0, #+0]
   \   00000058   0x....             LDR.N    R1,??DataTable3_6  ;; 0x40048044
   \   0000005A   0x6809             LDR      R1,[R1, #+0]
   \   0000005C   0xF3C1 0x5103      UBFX     R1,R1,#+20,#+4
   \   00000060   0x1C49             ADDS     R1,R1,#+1
   \   00000062   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000066   0x....             LDR.N    R1,??DataTable3_8
   \   00000068   0x6008             STR      R0,[R1, #+0]
     88            g_flash_clock =  g_core_clock / ((uint32_t)((SIM->CLKDIV1 & SIM_CLKDIV1_OUTDIV4_MASK) >> SIM_CLKDIV1_OUTDIV4_SHIFT)+ 1u);
   \   0000006A   0x....             LDR.N    R0,??DataTable3_4
   \   0000006C   0x6800             LDR      R0,[R0, #+0]
   \   0000006E   0x....             LDR.N    R1,??DataTable3_6  ;; 0x40048044
   \   00000070   0x6809             LDR      R1,[R1, #+0]
   \   00000072   0xF3C1 0x4103      UBFX     R1,R1,#+16,#+4
   \   00000076   0x1C49             ADDS     R1,R1,#+1
   \   00000078   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   0000007C   0x....             LDR.N    R1,??DataTable3_9
   \   0000007E   0x6008             STR      R0,[R1, #+0]
     89            
     90            //初始化用于打印调试信息的串口模块
     91            //TERM_PORT为UART通道，在k60_card.h中定义
     92            //TERMINAL_BAUD为UART波特率，在k60_card.h中定义
     93            term_port_structure.UART_Uartx = TERM_PORT;
   \   00000080   0x....             LDR.N    R0,??DataTable3_10  ;; 0x4006a000
   \   00000082   0x9001             STR      R0,[SP, #+4]
     94            term_port_structure.UART_BaudRate = TERMINAL_BAUD;
   \   00000084   0xF44F 0x5016      MOV      R0,#+9600
   \   00000088   0x9002             STR      R0,[SP, #+8]
     95            LPLD_UART_Init(term_port_structure);
   \   0000008A   0xA901             ADD      R1,SP,#+4
   \   0000008C   0xB084             SUB      SP,SP,#+16
   \   0000008E   0x4668             MOV      R0,SP
   \   00000090   0x2214             MOVS     R2,#+20
   \   00000092   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000096   0xBC0F             POP      {R0-R3}
   \   00000098   0x.... 0x....      BL       LPLD_UART_Init
     96          
     97            /*
     98          *****************************************************************************  
     99            //打印系统调试信息
    100          #ifdef DEBUG_PRINT   
    101            printf("\r\n");   
    102            printf("*********** 基于拉普兰德K60底层库 http://www.lpld.cn ***********\r\n");
    103            printf("OSKinetis固件库版本:%s\tmail:support@lpld.cn\r\n", OSKinetis_Version);
    104            printf("系统内核时钟:%dMHz\t总线时钟:%dMHz\r\n", g_core_clock/1000000u, g_bus_clock/1000000u);
    105            printf("FlexBus时钟:%dMHz\tFlash时钟:%dMHz\r\n", g_flexbus_clock/1000000u, g_flash_clock/1000000u);
    106            printf("系统启动完毕，若要禁用调试输出请定义PRINT_ON_OFF为1(k60_card.h)\r\n");
    107            printf("********************************************************************\r\n");
    108          #endif
    109          ****************************************************************************/
    110              //打印系统调试信息
    111          #ifdef DEBUG_PRINT  
    112            printf("\r\n");   
   \   0000009C   0x....             ADR.N    R0,??DataTable3  ;; 0x0D, 0x0A, 0x00, 0x00
   \   0000009E   0x.... 0x....      BL       printf
    113            printf("*********** DEBUG INFORMATION http://www.h4ck0ne.com ***********\r\n");
   \   000000A2   0x....             LDR.N    R0,??DataTable3_11
   \   000000A4   0x.... 0x....      BL       printf
    114            printf("OSKinetis Version:%s\tmail:support@lpld.cn\r\n", OSKinetis_Version);
   \   000000A8   0x....             LDR.N    R1,??DataTable3_12
   \   000000AA   0x....             LDR.N    R0,??DataTable3_13
   \   000000AC   0x.... 0x....      BL       printf
    115            printf("core_clock:%dMHz\t Bus_clock:%dMHz\r\n", g_core_clock/1000000u, g_bus_clock/1000000u);
   \   000000B0   0x....             LDR.N    R0,??DataTable3_7
   \   000000B2   0x6800             LDR      R0,[R0, #+0]
   \   000000B4   0x....             LDR.N    R1,??DataTable3_14  ;; 0xf4240
   \   000000B6   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   000000BA   0x....             LDR.N    R0,??DataTable3_4
   \   000000BC   0x6800             LDR      R0,[R0, #+0]
   \   000000BE   0x....             LDR.N    R1,??DataTable3_14  ;; 0xf4240
   \   000000C0   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   000000C4   0x....             LDR.N    R0,??DataTable3_15
   \   000000C6   0x.... 0x....      BL       printf
    116            printf("FlexBus_clock:%dMHz\t Flash_clock:%dMHz\r\n", g_flexbus_clock/1000000u, g_flash_clock/1000000u);
   \   000000CA   0x....             LDR.N    R0,??DataTable3_9
   \   000000CC   0x6800             LDR      R0,[R0, #+0]
   \   000000CE   0x....             LDR.N    R1,??DataTable3_14  ;; 0xf4240
   \   000000D0   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   000000D4   0x....             LDR.N    R0,??DataTable3_8
   \   000000D6   0x6800             LDR      R0,[R0, #+0]
   \   000000D8   0x....             LDR.N    R1,??DataTable3_14  ;; 0xf4240
   \   000000DA   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   000000DE   0x....             LDR.N    R0,??DataTable3_16
   \   000000E0   0x.... 0x....      BL       printf
    117            printf("System start OK!!!if you want disable DEBUG OUTPUT, please define PRINT_ON_OFF is 1(k60_card.h)\r\n");
   \   000000E4   0x....             LDR.N    R0,??DataTable3_17
   \   000000E6   0x.... 0x....      BL       printf
    118            printf("********************************************************************\r\n");
   \   000000EA   0x....             LDR.N    R0,??DataTable3_18
   \   000000EC   0x.... 0x....      BL       printf
    119          #endif
    120            
    121          }
   \   000000F0   0xB007             ADD      SP,SP,#+28
   \   000000F2   0xBD00             POP      {PC}             ;; return
    122          
    123          /**
    124           * 更新SystemCoreClock
    125           *
    126           * @param  none
    127           * @return none
    128           *
    129           * @brief  更新全局变量SystemCoreClock的值，以便获取最新的系统内核频率。
    130           *         
    131           */

   \                                 In section .text, align 2, keep-with-next
    132          void SystemCoreClockUpdate (void) {
    133            uint32_t temp;
    134            temp =  CPU_XTAL_CLK_HZ *((uint32_t)(MCG->C6 & MCG_C6_VDIV_MASK) + 24u );
   \                     SystemCoreClockUpdate:
   \   00000000   0x....             LDR.N    R0,??DataTable3_19  ;; 0x40064005
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000006   0xF010 0x001F      ANDS     R0,R0,#0x1F
   \   0000000A   0x3018             ADDS     R0,R0,#+24
   \   0000000C   0x....             LDR.N    R1,??DataTable3_20  ;; 0x2faf080
   \   0000000E   0x4348             MULS     R0,R1,R0
    135            temp = (uint32_t)(temp/((uint32_t)(MCG->C5 & MCG_C5_PRDIV_MASK) +1u ));
   \   00000010   0x....             LDR.N    R1,??DataTable3_21  ;; 0x40064004
   \   00000012   0x7809             LDRB     R1,[R1, #+0]
   \   00000014   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000016   0xF011 0x011F      ANDS     R1,R1,#0x1F
   \   0000001A   0x1C49             ADDS     R1,R1,#+1
   \   0000001C   0xFBB0 0xF0F1      UDIV     R0,R0,R1
    136          #if defined(CPU_MK60FX15_ADD)
    137            temp = (CPU_XTAL_CLK_HZ) *((uint32_t)(MCG->C6 & 0x1f) + 16u );
   \   00000020   0x....             LDR.N    R1,??DataTable3_19  ;; 0x40064005
   \   00000022   0x7809             LDRB     R1,[R1, #+0]
   \   00000024   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000026   0xF011 0x011F      ANDS     R1,R1,#0x1F
   \   0000002A   0x3110             ADDS     R1,R1,#+16
   \   0000002C   0x....             LDR.N    R2,??DataTable3_20  ;; 0x2faf080
   \   0000002E   0x4351             MULS     R1,R2,R1
   \   00000030   0x0008             MOVS     R0,R1
    138            temp = (uint32_t)(temp/((uint32_t)(MCG->C5 & 0x07) +1u ))/2;
   \   00000032   0x....             LDR.N    R1,??DataTable3_21  ;; 0x40064004
   \   00000034   0x7809             LDRB     R1,[R1, #+0]
   \   00000036   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000038   0xF011 0x0107      ANDS     R1,R1,#0x7
   \   0000003C   0x1C49             ADDS     R1,R1,#+1
   \   0000003E   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000042   0x0840             LSRS     R0,R0,#+1
    139          #endif
    140            SystemCoreClock = temp;
   \   00000044   0x....             LDR.N    R1,??DataTable3_5
   \   00000046   0x6008             STR      R0,[R1, #+0]
    141          }
   \   00000048   0x4770             BX       LR               ;; return
    142          
    143          /**
    144           * 硬件错误中断函数
    145           *
    146           * @param  none
    147           * @return none
    148           *
    149           * @brief  触发此中断的原因一般为：模块使用未初始化、错误的寻址空间等。
    150           *         
    151           */

   \                                 In section .text, align 2, keep-with-next
    152          void HardFault_Handler(void)
    153          {
   \                     HardFault_Handler:
   \   00000000   0xB580             PUSH     {R7,LR}
    154          #ifdef DEBUG_PRINT 
    155             printf("\r\n****内核发生硬件错误*****\r\n");
   \   00000002   0x....             LDR.N    R0,??DataTable3_22
   \   00000004   0x.... 0x....      BL       printf
    156          #endif
    157             return;
   \   00000008   0xBD01             POP      {R0,PC}          ;; return
    158          }
    159          
    160          /**
    161           * 默认中断函数
    162           *
    163           * @param  none
    164           * @return none
    165           *
    166           * @brief  未定义中断处理函数的中断源会进入此函数，并打印中断向量号。
    167           *         
    168           */

   \                                 In section .text, align 2, keep-with-next
    169          void DefaultISR(void)
    170          {
   \                     DefaultISR:
   \   00000000   0xB580             PUSH     {R7,LR}
    171             #define VECTORNUM                     (*(volatile uint8_t*)(0xE000ED04)) 
    172          #ifdef DEBUG_PRINT 
    173             printf("\r\n****进入未定义中断,Interrupt Number %d*****\r\n",VECTORNUM-16);
   \   00000002   0x....             LDR.N    R0,??DataTable3_23  ;; 0xe000ed04
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0xF1B0 0x0110      SUBS     R1,R0,#+16
   \   0000000C   0x....             LDR.N    R0,??DataTable3_24
   \   0000000E   0x.... 0x....      BL       printf
    174          #endif
    175             return;
   \   00000012   0xBD01             POP      {R0,PC}          ;; return
    176          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x0D 0x0A          DC8      0x0D, 0x0A, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x40048038         DC32     0x40048038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x4005200E         DC32     0x4005200e

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x40052000         DC32     0x40052000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     g_core_clock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     SystemCoreClock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x40048044         DC32     0x40048044

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x........         DC32     g_bus_clock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x........         DC32     g_flexbus_clock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x........         DC32     g_flash_clock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x4006A000         DC32     0x4006a000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \   00000000   0x........         DC32     `?<Constant "*********** DEBUG INF...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \   00000000   0x........         DC32     `?<Constant "3.02">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_13:
   \   00000000   0x........         DC32     `?<Constant "OSKinetis Version:%s\\t...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_14:
   \   00000000   0x000F4240         DC32     0xf4240

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_15:
   \   00000000   0x........         DC32     `?<Constant "core_clock:%dMHz\\t Bus...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_16:
   \   00000000   0x........         DC32     `?<Constant "FlexBus_clock:%dMHz\\t ...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_17:
   \   00000000   0x........         DC32     `?<Constant "System start OK!!!if ...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_18:
   \   00000000   0x........         DC32     `?<Constant "*********************...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_19:
   \   00000000   0x40064005         DC32     0x40064005

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_20:
   \   00000000   0x02FAF080         DC32     0x2faf080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_21:
   \   00000000   0x40064004         DC32     0x40064004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_22:
   \   00000000   0x........         DC32     `?<Constant "\\r\\n****\\304\\332\\272\\313\\267\\242\\3`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_23:
   \   00000000   0xE000ED04         DC32     0xe000ed04

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_24:
   \   00000000   0x........         DC32     `?<Constant "\\r\\n****\\275\\370\\310\\353\\316\\264\\2`

   \                                 In section .rodata, align 4
   \   00000000   0x0D 0x0A          DC8 "\015\012"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "*********** DEBUG INF...">`:
   \   00000000   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000008   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 20H, 44H, 45H, 42H, 55H
   \              0x2A 0x20    
   \              0x44 0x45    
   \              0x42 0x55    
   \   00000010   0x47 0x20          DC8 47H, 20H, 49H, 4EH, 46H, 4FH, 52H, 4DH
   \              0x49 0x4E    
   \              0x46 0x4F    
   \              0x52 0x4D    
   \   00000018   0x41 0x54          DC8 41H, 54H, 49H, 4FH, 4EH, 20H, 68H, 74H
   \              0x49 0x4F    
   \              0x4E 0x20    
   \              0x68 0x74    
   \   00000020   0x74 0x70          DC8 74H, 70H, 3AH, 2FH, 2FH, 77H, 77H, 77H
   \              0x3A 0x2F    
   \              0x2F 0x77    
   \              0x77 0x77    
   \   00000028   0x2E 0x68          DC8 2EH, 68H, 34H, 63H, 6BH, 30H, 6EH, 65H
   \              0x34 0x63    
   \              0x6B 0x30    
   \              0x6E 0x65    
   \   00000030   0x2E 0x63          DC8 2EH, 63H, 6FH, 6DH, 20H, 2AH, 2AH, 2AH
   \              0x6F 0x6D    
   \              0x20 0x2A    
   \              0x2A 0x2A    
   \   00000038   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000040   0x0D 0x0A          DC8 0DH, 0AH, 0
   \              0x00         
   \   00000043   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "OSKinetis Version:%s\\t...">`:
   \   00000000   0x4F 0x53          DC8 "OSKinetis Version:%s\tmail:support@lpld.cn\015\012"
   \              0x4B 0x69    
   \              0x6E 0x65    
   \              0x74 0x69    
   \              0x73 0x20    
   \              0x56 0x65    
   \              0x72 0x73    
   \              0x69 0x6F    
   \              0x6E 0x3A    
   \              0x25 0x73    
   \              0x09 0x6D    
   \              0x61 0x69    
   \              0x6C 0x3A    
   \              0x73 0x75    
   \              0x70 0x70    
   \              0x6F 0x72    
   \              0x74 0x40    
   \              0x6C 0x70    
   \              0x6C 0x64    
   \              0x2E 0x63    
   \              0x6E 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "3.02">`:
   \   00000000   0x33 0x2E          DC8 "3.02"
   \              0x30 0x32    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "core_clock:%dMHz\\t Bus...">`:
   \   00000000   0x63 0x6F          DC8 "core_clock:%dMHz\t Bus_clock:%dMHz\015\012"
   \              0x72 0x65    
   \              0x5F 0x63    
   \              0x6C 0x6F    
   \              0x63 0x6B    
   \              0x3A 0x25    
   \              0x64 0x4D    
   \              0x48 0x7A    
   \              0x09 0x20    
   \              0x42 0x75    
   \              0x73 0x5F    
   \              0x63 0x6C    
   \              0x6F 0x63    
   \              0x6B 0x3A    
   \              0x25 0x64    
   \              0x4D 0x48    
   \              0x7A 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "FlexBus_clock:%dMHz\\t ...">`:
   \   00000000   0x46 0x6C          DC8 "FlexBus_clock:%dMHz\t Flash_clock:%dMHz\015\012"
   \              0x65 0x78    
   \              0x42 0x75    
   \              0x73 0x5F    
   \              0x63 0x6C    
   \              0x6F 0x63    
   \              0x6B 0x3A    
   \              0x25 0x64    
   \              0x4D 0x48    
   \              0x7A 0x09    
   \              0x20 0x46    
   \              0x6C 0x61    
   \              0x73 0x68    
   \              0x5F 0x63    
   \              0x6C 0x6F    
   \              0x63 0x6B    
   \              0x3A 0x25    
   \              0x64 0x4D    
   \              0x48 0x7A    
   \              0x0D 0x0A    
   \              0x00         
   \   00000029   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "System start OK!!!if ...">`:
   \   00000000   0x53 0x79          DC8 53H, 79H, 73H, 74H, 65H, 6DH, 20H, 73H
   \              0x73 0x74    
   \              0x65 0x6D    
   \              0x20 0x73    
   \   00000008   0x74 0x61          DC8 74H, 61H, 72H, 74H, 20H, 4FH, 4BH, 21H
   \              0x72 0x74    
   \              0x20 0x4F    
   \              0x4B 0x21    
   \   00000010   0x21 0x21          DC8 21H, 21H, 69H, 66H, 20H, 79H, 6FH, 75H
   \              0x69 0x66    
   \              0x20 0x79    
   \              0x6F 0x75    
   \   00000018   0x20 0x77          DC8 20H, 77H, 61H, 6EH, 74H, 20H, 64H, 69H
   \              0x61 0x6E    
   \              0x74 0x20    
   \              0x64 0x69    
   \   00000020   0x73 0x61          DC8 73H, 61H, 62H, 6CH, 65H, 20H, 44H, 45H
   \              0x62 0x6C    
   \              0x65 0x20    
   \              0x44 0x45    
   \   00000028   0x42 0x55          DC8 42H, 55H, 47H, 20H, 4FH, 55H, 54H, 50H
   \              0x47 0x20    
   \              0x4F 0x55    
   \              0x54 0x50    
   \   00000030   0x55 0x54          DC8 55H, 54H, 2CH, 20H, 70H, 6CH, 65H, 61H
   \              0x2C 0x20    
   \              0x70 0x6C    
   \              0x65 0x61    
   \   00000038   0x73 0x65          DC8 73H, 65H, 20H, 64H, 65H, 66H, 69H, 6EH
   \              0x20 0x64    
   \              0x65 0x66    
   \              0x69 0x6E    
   \   00000040   0x65 0x20          DC8 65H, 20H, 50H, 52H, 49H, 4EH, 54H, 5FH
   \              0x50 0x52    
   \              0x49 0x4E    
   \              0x54 0x5F    
   \   00000048   0x4F 0x4E          DC8 4FH, 4EH, 5FH, 4FH, 46H, 46H, 20H, 69H
   \              0x5F 0x4F    
   \              0x46 0x46    
   \              0x20 0x69    
   \   00000050   0x73 0x20          DC8 73H, 20H, 31H, 28H, 6BH, 36H, 30H, 5FH
   \              0x31 0x28    
   \              0x6B 0x36    
   \              0x30 0x5F    
   \   00000058   0x63 0x61          DC8 63H, 61H, 72H, 64H, 2EH, 68H, 29H, 0DH
   \              0x72 0x64    
   \              0x2E 0x68    
   \              0x29 0x0D    
   \   00000060   0x0A 0x00          DC8 0AH, 0
   \   00000062   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "*********************...">`:
   \   00000000   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000008   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000010   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000018   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000020   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000028   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000030   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000038   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000040   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 0DH, 0AH, 0
   \              0x2A 0x2A    
   \              0x0D 0x0A    
   \              0x00         
   \   00000047   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\r\\n****\\304\\332\\272\\313\\267\\242\\3`:
   \   00000000   0x0D 0x0A          DC8 "\015\012****\304\332\272\313\267\242\311\372\323\262\274\376\264\355\316\363*****\015\012"
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0xC4 0xDA    
   \              0xBA 0xCB    
   \              0xB7 0xA2    
   \              0xC9 0xFA    
   \              0xD3 0xB2    
   \              0xBC 0xFE    
   \              0xB4 0xED    
   \              0xCE 0xF3    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x0D    
   \              0x0A 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\r\\n****\\275\\370\\310\\353\\316\\264\\2`:
   \   00000000   0x0D 0x0A          DC8 "\015\012****\275\370\310\353\316\264\266\250\322\345\326\320\266\317,Interrupt Number %d*****\015\012"
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0xBD 0xF8    
   \              0xC8 0xEB    
   \              0xCE 0xB4    
   \              0xB6 0xA8    
   \              0xD2 0xE5    
   \              0xD6 0xD0    
   \              0xB6 0xCF    
   \              0x2C 0x49    
   \              0x6E 0x74    
   \              0x65 0x72    
   \              0x72 0x75    
   \              0x70 0x74    
   \              0x20 0x4E    
   \              0x75 0x6D    
   \              0x62 0x65    
   \              0x72 0x20    
   \              0x25 0x64    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x0D    
   \              0x0A 0x00    
    177          
    178          /**
    179           * 初始化操作系统的滴答定时器(OS Tick)
    180           *
    181           * @param  none
    182           * @return none
    183           *
    184           * @brief  该函数仅在uC/OS等系统中调用，切必须在OSStart()和处理器初始化后调用
    185           *         
    186           */
    187          #if UCOS_II > 0u
    188          void SystemTickInit (void)
    189          {
    190            uint32  cpu_clk_freq;
    191            uint32  cnts;
    192          
    193            cpu_clk_freq = g_core_clock;  //获取SysTick时钟
    194          
    195          #if (OS_VERSION >= 30000u)
    196            cnts  = cpu_clk_freq / (uint32)OSCfg_TickRate_Hz;    
    197          #else
    198            cnts  = cpu_clk_freq / (uint32)OS_TICKS_PER_SEC;        
    199          #endif
    200          
    201            OS_CPU_SysTickInit(cnts);     //初始化uCOS滴答定时器SysTick
    202          }
    203          #endif
    204          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  DefaultISR
              8 -> printf
        8  HardFault_Handler
              8 -> printf
        0  SystemCoreClockUpdate
       48  SystemInit
             32 -> LPLD_PLL_Setup
             32 -> LPLD_UART_Init
             32 -> SystemCoreClockUpdate
             48 -> __aeabi_memcpy4
             32 -> common_relocate
             32 -> printf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      68  ?<Constant "*********** DEBUG INF...">
      72  ?<Constant "*********************...">
       8  ?<Constant "3.02">
      44  ?<Constant "FlexBus_clock:%dMHz\t ...">
      44  ?<Constant "OSKinetis Version:%s\t...">
     100  ?<Constant "System start OK!!!if ...">
       4  ?<Constant "\r\n">
      48  ?<Constant "\r\n****\275\370\310\353\316\264\2
      32  ?<Constant "\r\n****\304\332\272\313\267\242\3
      36  ?<Constant "core_clock:%dMHz\t Bus...">
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_12
       4  ??DataTable3_13
       4  ??DataTable3_14
       4  ??DataTable3_15
       4  ??DataTable3_16
       4  ??DataTable3_17
       4  ??DataTable3_18
       4  ??DataTable3_19
       4  ??DataTable3_2
       4  ??DataTable3_20
       4  ??DataTable3_21
       4  ??DataTable3_22
       4  ??DataTable3_23
       4  ??DataTable3_24
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
      20  DefaultISR
      10  HardFault_Handler
       4  SystemCoreClock
      74  SystemCoreClockUpdate
     244  SystemInit

 
   4 bytes in section .data
 456 bytes in section .rodata
 448 bytes in section .text
 
 448 bytes of CODE  memory
 456 bytes of CONST memory
   4 bytes of DATA  memory

Errors: none
Warnings: none
